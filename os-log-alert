#!/usr/bin/env bash
set -o errexit          # -e  Exit on most errors (see man bash)
set -o nounset          # -u  Disallow expansion of unset variables
# set -o xtrace         # -x  Enable only for debug // bash -xv script.sh // set -x/-x  start/stop debugging from/to here
# set -o verbose        # -v  Enable only for debug
set -o pipefail         # -p  Use last non-zero exit code in a pipeline
set -o errtrace         # -E  Make sure any error trap is inherited

# Original script from:
# https://www.2daygeek.com/linux-bash-script-to-monitor-messages-log-warning-error-critical-send-email/

# To automate this. It will run everyday at 7’o clock.
# crontab -e
# 0 7 * * * /bin/bash /opt/scripts/os-log-alert.sh


me="$(basename "$(test -L "$0" && readlink "$0" || echo "$0")")"    # Saca solo el nombre del script

count=$(grep -i "$(date --date='yesterday' '+%b %e')" /var/log/syslog.1 | grep -Ewic 'warning|error|critical')    # Cantidad de alertas

if [[ "$count" -gt 0 ]] ; then

  # This is a temp file, which is created to store the email message.
  trap 'rm -f "$MESSAGE"' EXIT
  MESSAGE=$(mktemp -t ci-"$(date +%Y-%m-%d-%H-%M-%S)"-XXXXXXXXXX)

  # Send a mail to given email id when errors found in log

  SUBJECT="SUBJECT: Advertencia: Errores encontrados en el registro del sistema del día: $(date --date='yesterday' '+%b %e')"
  TO="TO:alejandro"

  {
    echo "$SUBJECT"
    echo "$TO"
  } >> "$MESSAGE"

  {
    echo "ATENCION: Errores registrados en /var/log/syslog.1"
    echo  "Hostname: $(hostname)"
    echo -e "\n"
    echo "+------------------------------------------------------------------------------------+"
    echo "|             Mensajes de error en el archivo de registro a continuacion             |"
    echo "+------------------------------------------------------------------------------------+"
    grep -i "$(date --date='yesterday' '+%b %e')" /var/log/syslog.1 | awk '{ $3=""; print}' | grep -Ewi 'warning|error|critical'
  } >> "$MESSAGE"

  sendmail -t -F "$me"  < "$MESSAGE"
fi
